name: Build and deploy

on:
  push: 
    branches: [ main ]

  # Run workflow manually
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Install dependencies
        run: npm ci

      - name: Create environment file
        run: |
          mkdir -p src/environments
          echo "export const environment = {" > src/environments/environment.ts
          echo "  production: false," >> src/environments/environment.ts
          echo "  OPENSEA_API_KEY: '${{ secrets.OPENSEA_API_KEY }}'," >> src/environments/environment.ts
          echo "  firebase: '${{ secrets.FIREBASE_CONFIG }}'," >> src/environments/environment.ts
          echo "};" >> src/environments/environment.ts

      - name: Build dependencies
        # env:
        #   OPENSEA_API_KEY: ${{ secrets.OPENSEA_API_KEY }}
        #   FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        #   FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        #   FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        #   FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        #   FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        #   FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: npm run build
        

      - name: Archive production artifact
        uses: actions/upload-artifact@main

        with: 
          name: dist
          path: dist/zuckerverso/browser
  deploy: 
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
      - name: Download artifact
        uses: actions/download-artifact@main
        with:
          name: dist
          path: dist/zuckerverso/browser
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
